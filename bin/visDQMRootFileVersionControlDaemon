#!/usr/bin/env python3

import os, time, re, sys
from traceback import print_exc
from Monitoring.Core.Utils import logme
from glob import glob


DROPBOX = sys.argv[1]  # Directory where we receive input ("drop box").
FILEREPO = sys.argv[2]  # Final file repository of original DQM files.
WAITTIME = 30  # Daemon cycle time.


# --------------------------------------------------------------------
# Process files forever.
while True:
    try:
        # Find new ROOT files.
        new = glob("%s/*.root.dqminfo" % DROPBOX)

        # If we found new files, print a little diagnostic.
        if len(new):
            logme("found %d new files.", len(new))

        for path in new:
            # Read in the file info.
            try:
                with open(path) as _f:
                    info = eval(_f.read())
            except:
                continue

            # Find all versions of the root file and only leave in the local
            # hard drive the newest one. Only files that have been archived
            # will be removed. To determine that the file has been archived
            # it looks if the key "zippath" exist in the info file; no
            # further test are carried out.
            verpat = re.sub("_V[0-9]{4}_", "_V[0-9][0-9][0-9][0-9]_", info["path"])
            flist = sorted(glob("%s/%s" % (FILEREPO, verpat)), reverse=True)
            if not len(flist):
                os.remove(path)
                continue

            hversion = int(re.search("_V([0-9]{4})_", flist[0]).group(1))
            for rfile in flist[1:]:
                # Read in the file info.
                finfo = "%s.dqminfo" % rfile
                try:
                    with open(finfo) as _f:
                        dqminfo = eval(_f.read())
                except:
                    continue

                if "zippath" in dqminfo:
                    logme("%s: removing file, version %d is newer", rfile, hversion)
                    os.remove(rfile)
                else:
                    logme("%s: not removing file, it is not archived yet.", rfile)

            # Clear out drop box
            os.remove(path)

    # If anything bad happened, barf but keep going.
    except KeyboardInterrupt as e:
        sys.exit(0)

    except Exception as e:
        logme("error: %s", e)
        print_exc()

    time.sleep(WAITTIME)
